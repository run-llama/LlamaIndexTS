name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]
    name: E2E on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Run E2E Tests
        run: pnpm run e2e

  test:
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: pnpm run test
  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Use Build For Examples
        run: pnpm link ../packages/llamaindex/
        working-directory: ./examples
      - name: Run Type Check
        run: pnpm run type-check
      - name: Run Circular Dependency Check
        run: pnpm dlx turbo run circular-check
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: typecheck-build-dist
          path: ./packages/llamaindex/dist
          if-no-files-found: error
  e2e-llamaindex-examples:
    strategy:
      fail-fast: false
      matrix:
        packages:
          - cloudflare-worker-agent
          - nextjs-agent
          - nextjs-edge-runtime
          - nextjs-node-runtime
    #          - waku-query-engine
    runs-on: ubuntu-latest
    name: Build LlamaIndex Example (${{ matrix.packages }})
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Build llamaindex
        run: pnpm run build
      - name: Build ${{ matrix.packages }}
        run: pnpm run build
        working-directory: packages/llamaindex/e2e/examples/${{ matrix.packages }}

  typecheck-examples:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Copy examples
        run: rsync -rv --exclude=node_modules ./examples ${{ runner.temp }}
      - name: Pack @llamaindex/cloud
        run: pnpm pack --pack-destination ${{ runner.temp }}
        working-directory: packages/cloud
      - name: Pack @llamaindex/core
        run: pnpm pack --pack-destination ${{ runner.temp }}
        working-directory: packages/core
      - name: Pack @llamaindex/env
        run: pnpm pack --pack-destination ${{ runner.temp }}
        working-directory: packages/env
      - name: Pack llamaindex
        run: pnpm pack --pack-destination ${{ runner.temp }}
        working-directory: packages/llamaindex
      - name: Install
        run: npm add ${{ runner.temp }}/*.tgz
        working-directory: ${{ runner.temp }}/examples
      - name: Run Type Check
        run: npx tsc --project ./tsconfig.json
        working-directory: ${{ runner.temp }}/examples
